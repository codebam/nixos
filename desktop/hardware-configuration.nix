# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  environment,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usb_storage"
    "usbhid"
    "uas"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [
    "kvm-amd"
    "amd_3d_vcache"
    "ntsync"
  ];
  boot.extraModulePackages = [ config.boot.kernelPackages.zenergy ];
  boot.kernelParams = [ "drm.panic_screen=qr_code" ];
  boot.kernel.sysctl."kernel.sysrq" = 1;

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/2ef09b4b-9fb1-4815-8dd2-4aede2ae9add";
    fsType = "bcachefs";
    options = [
      "X-mount.subdir=@root"
      "compression=lz4"
      "background_compression=zstd"
      "discard"
    ];
  };
  fileSystems."/persistent" = {
    device = "/dev/disk/by-uuid/2ef09b4b-9fb1-4815-8dd2-4aede2ae9add";
    fsType = "bcachefs";
    neededForBoot = true;
    options = [
      "X-mount.subdir=@persist"
      "compression=lz4"
      "background_compression=zstd"
      "discard"
    ];
  };
  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/2ef09b4b-9fb1-4815-8dd2-4aede2ae9add";
    fsType = "bcachefs";
    options = [
      "X-mount.subdir=@nix"
      "compression=lz4"
      "background_compression=zstd"
      "discard"
    ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4618-0B7F";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/games" = {
    device = "/dev/disk/by-uuid/7d57a643-ac36-4e54-b873-0e19bd8a8645";
    fsType = "btrfs";
    options = [ "compress=zstd" ];
  };

  fileSystems."/backup" = {
    device = "/dev/disk/by-uuid/a4058013-b85c-4bf0-a187-b459a23267a9";
    fsType = "btrfs";
    options = [
      "compress=zstd"
      "nofail"
    ];
  };

  swapDevices = [
    {
      device = "/dev/disk/by-uuid/678b887c-a86e-449a-8f9a-3455505bd746";
      priority = -2;
    }
    {
      device = "/dev/disk/by-uuid/bd9fa5d1-b95d-4cd7-96d5-4f03c51f9f21";
      priority = -3;
    }
  ];

    environment.persistence."/persistent" = {
    enable = true;  # NB: Defaults to true, not needed
    hideMounts = true;
    directories = [
      "/var/log"
      "/var/lib/bluetooth"
      "/var/lib/nixos"
      "/var/lib/systemd/coredump"
      "/etc/NetworkManager/system-connections"
      { directory = "/var/lib/colord"; user = "colord"; group = "colord"; mode = "u=rwx,g=rx,o="; }
    ];
    files = [
      "/etc/machine-id"
      { file = "/var/keys/secret_file"; parentDirectory = { mode = "u=rwx,g=,o="; }; }
      "/etc/nixos"
    ];
    users.codebam = {
      directories = [
        "Downloads"
        "Music"
        "Pictures"
        "Documents"
        "Videos"
        { directory = ".gnupg"; mode = "0700"; }
        { directory = ".ssh"; mode = "0700"; }
        { directory = ".nixops"; mode = "0700"; }
        { directory = ".local/share/keyrings"; mode = "0700"; }
        ".local/share/direnv"
        ".steam"
        ".local/share/Steam"
        ".librewolf"
        ".password-store"
        ".local/state/wireplumber"
        ".config/Element"
      ];
      files = [
      ];
    };
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp5s0f1u3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
